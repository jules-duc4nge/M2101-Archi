CCS PCH C Compiler, Version 4.104, 5967               17-mars-20 13:34

               Filename: C:\Users\Jules\Documents\Archi\M2101-Archi\Projet-Alarme\main.lst

               ROM used: 1648 bytes (5%)
                         Largest free fragment is 31116
               RAM used: 30 (2%) at main() level
                         36 (2%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   044E
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   00A2
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   016C
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include "C:\Users\Jules\Documents\Archi\M2101-Archi\Projet-Alarme\main.h" 
.................... #include <F:\PICC\Devices\18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOOSCSEN                 //Oscillator switching is disabled, main oscillator is source 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES BORV20                   //Brownout reset at 2.0V 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES STVREN                   //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOWRTD                   //Data EEPROM not write protected 
.................... #FUSES NOWRTB                   //Boot block not write protected 
.................... #FUSES NOWRTC                   //configuration not registers write protected 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOCPB                    //No Boot Block code protection 
.................... #FUSES NOEBTR                   //Memory not protected from table reads 
.................... #FUSES NOEBTRB                  //Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
....................  
.................... //Digicode 
....................  
.................... //Colonnes 
.................... #define digi_column_1 pin_d0 
.................... #define digi_column_2 pin_d1 
.................... #define digi_column_3 pin_d2 
....................  
.................... //Lignes 
.................... #define digi_row_1 input(pin_d3) 
.................... #define digi_row_2 input(pin_d4) 
.................... #define digi_row_3 input(pin_d5) 
.................... #define digi_row_4 input(pin_d6) 
....................  
.................... //Alarmes et buzzer 
.................... #define buzzer pin_a0 
.................... #define alarm pin_b7 
.................... #define alarm_led pin_c0 
....................  
.................... //Fenêtres 
.................... #define window_1 input(pin_b1) 
.................... #define window_2 input(pin_b2) 
.................... #define window_3 input(pin_b3) 
.................... #define window_4 input(pin_b4) 
.................... #define door_1 input(pin_b5) 
.................... #define door_2 input(pin_b6) 
....................  
.................... //Led fenêtres 
.................... #define window_1_led pin_c1 
.................... #define window_2_led pin_c2 
.................... #define window_3_led pin_c5 
.................... #define window_4_led pin_c4 
.................... #define door_1_led pin_e0 
.................... #define door_2_led pin_e1 
....................  
.................... //Constantes 
.................... int8 const ARMAMENT_CODE=33, const DISARMAMENT_CODE=1664, 
....................    const DELAY_OUT=20,const DELAY_IN=25, const LEGAL_ALARM_TIME=180; 
....................     
.................... //Variables 
.................... signed int8 tenth=0, code=0, alarm_delay=-1, alarm_ext_delay=-1, door_delay=-1, 
....................     alarm_state=0, alarm_ext_state=0; 
....................      
.................... //Fonctions et méthodes 
.................... void alarm_ext_setup(){ 
....................    alarm_ext_delay=10;//LEGAL_ALARM_TIME; 
0440:  MOVLW  0A
0442:  MOVWF  1A
....................    alarm_ext_state=1; 
0444:  MOVLW  01
0446:  MOVWF  1D
....................    output_high(alarm); 
0448:  BCF    F93.7
044A:  BSF    F8A.7
.................... } 
044C:  RETLW  00
....................  
.................... void general_reset(){ 
....................    output_low(window_1_led);//Fenêtres 
*
0128:  BCF    F94.1
012A:  BCF    F8B.1
....................    output_low(window_2_led); 
012C:  BCF    F94.2
012E:  BCF    F8B.2
....................    output_low(window_3_led); 
0130:  BCF    F94.5
0132:  BCF    F8B.5
....................    output_low(window_4_led); 
0134:  BCF    F94.4
0136:  BCF    F8B.4
....................    output_low(door_1_led);//Portes 
0138:  BCF    F96.0
013A:  BCF    F8D.0
....................    output_low(door_2_led); 
013C:  BCF    F96.1
013E:  BCF    F8D.1
....................    alarm_delay=-1;//Délais 
0140:  MOVLW  FF
0142:  MOVWF  19
....................    alarm_ext_delay=-1; 
0144:  MOVWF  1A
....................    door_delay=-1; 
0146:  MOVWF  1B
.................... } 
0148:  GOTO   02F0 (RETURN)
....................     
.................... #int_TIMER1 
.................... void TIMER1_isr(void){ 
....................    set_timer1(3036); //Tout les dixièmes 
*
00A2:  MOVLW  0B
00A4:  MOVWF  FCF
00A6:  MOVLW  DC
00A8:  MOVWF  FCE
....................    tenth++; 
00AA:  INCF   17,F
....................    if(tenth==10){//Toute les secondes 
00AC:  MOVF   17,W
00AE:  SUBLW  0A
00B0:  BNZ   00D8
....................       tenth=0; 
00B2:  CLRF   17
....................       if(alarm_delay>0){ 
00B4:  BTFSC  19.7
00B6:  BRA    00C0
00B8:  MOVF   19,W
00BA:  SUBLW  00
00BC:  BC    00C0
....................          alarm_delay--; 
00BE:  DECF   19,F
....................       } 
....................       if(alarm_ext_delay>0){ 
00C0:  BTFSC  1A.7
00C2:  BRA    00CC
00C4:  MOVF   1A,W
00C6:  SUBLW  00
00C8:  BC    00CC
....................          alarm_ext_delay--; 
00CA:  DECF   1A,F
....................       } 
....................       if(door_delay>0){ 
00CC:  BTFSC  1B.7
00CE:  BRA    00D8
00D0:  MOVF   1B,W
00D2:  SUBLW  00
00D4:  BC    00D8
....................          door_delay--; 
00D6:  DECF   1B,F
....................       } 
....................    } 
.................... } 
....................  
00D8:  BCF    F9E.0
00DA:  GOTO   0060
.................... #int_EXT 
.................... void  EXT_isr(void){ 
....................    //Lecture de la colone 1 
....................    output_high(digi_column_1); 
*
016C:  BCF    F95.0
016E:  BSF    F8C.0
....................    output_low(digi_column_2); 
0170:  BCF    F95.1
0172:  BCF    F8C.1
....................    output_low(digi_column_3); 
0174:  BCF    F95.2
0176:  BCF    F8C.2
....................     
....................    if(digi_row_1){ 
0178:  BSF    F95.3
017A:  BTFSS  F83.3
017C:  BRA    0196
....................       printf("1"); 
017E:  MOVLW  31
0180:  BTFSS  F9E.4
0182:  BRA    0180
0184:  MOVWF  FAD
....................       code=10*code+1; 
0186:  MOVLW  0A
0188:  MOVWF  21
018A:  MOVFF  18,22
018E:  RCALL  00DE
0190:  MOVLW  01
0192:  ADDWF  01,W
0194:  MOVWF  18
....................    } 
....................    if(digi_row_2){ 
0196:  BSF    F95.4
0198:  BTFSS  F83.4
019A:  BRA    01B4
....................       printf("4"); 
019C:  MOVLW  34
019E:  BTFSS  F9E.4
01A0:  BRA    019E
01A2:  MOVWF  FAD
....................       code=10*code+4; 
01A4:  MOVLW  0A
01A6:  MOVWF  21
01A8:  MOVFF  18,22
01AC:  RCALL  00DE
01AE:  MOVLW  04
01B0:  ADDWF  01,W
01B2:  MOVWF  18
....................    } 
....................    if(digi_row_3){ 
01B4:  BSF    F95.5
01B6:  BTFSS  F83.5
01B8:  BRA    01D2
....................       printf("7"); 
01BA:  MOVLW  37
01BC:  BTFSS  F9E.4
01BE:  BRA    01BC
01C0:  MOVWF  FAD
....................       code=10*code+7; 
01C2:  MOVLW  0A
01C4:  MOVWF  21
01C6:  MOVFF  18,22
01CA:  RCALL  00DE
01CC:  MOVLW  07
01CE:  ADDWF  01,W
01D0:  MOVWF  18
....................    } 
....................    if(digi_row_4){ 
01D2:  BSF    F95.6
01D4:  BTFSS  F83.6
01D6:  BRA    01F2
....................       printf("%c%c ",254,1); 
01D8:  MOVLW  FE
01DA:  BTFSS  F9E.4
01DC:  BRA    01DA
01DE:  MOVWF  FAD
01E0:  MOVLW  01
01E2:  BTFSS  F9E.4
01E4:  BRA    01E2
01E6:  MOVWF  FAD
01E8:  MOVLW  20
01EA:  BTFSS  F9E.4
01EC:  BRA    01EA
01EE:  MOVWF  FAD
....................       code=0; 
01F0:  CLRF   18
....................    } 
....................     
....................    //Lecture de la colone 2 
....................    output_low(digi_column_1); 
01F2:  BCF    F95.0
01F4:  BCF    F8C.0
....................    output_high(digi_column_2); 
01F6:  BCF    F95.1
01F8:  BSF    F8C.1
....................    output_low(digi_column_3); 
01FA:  BCF    F95.2
01FC:  BCF    F8C.2
....................     
....................    if(digi_row_1){ 
01FE:  BSF    F95.3
0200:  BTFSS  F83.3
0202:  BRA    021C
....................       printf("2"); 
0204:  MOVLW  32
0206:  BTFSS  F9E.4
0208:  BRA    0206
020A:  MOVWF  FAD
....................       code=10*code+2; 
020C:  MOVLW  0A
020E:  MOVWF  21
0210:  MOVFF  18,22
0214:  RCALL  00DE
0216:  MOVLW  02
0218:  ADDWF  01,W
021A:  MOVWF  18
....................    } 
....................    if(digi_row_2){ 
021C:  BSF    F95.4
021E:  BTFSS  F83.4
0220:  BRA    023A
....................       printf("5"); 
0222:  MOVLW  35
0224:  BTFSS  F9E.4
0226:  BRA    0224
0228:  MOVWF  FAD
....................       code=10*code+5; 
022A:  MOVLW  0A
022C:  MOVWF  21
022E:  MOVFF  18,22
0232:  RCALL  00DE
0234:  MOVLW  05
0236:  ADDWF  01,W
0238:  MOVWF  18
....................    } 
....................    if(digi_row_3){ 
023A:  BSF    F95.5
023C:  BTFSS  F83.5
023E:  BRA    0258
....................       printf("8"); 
0240:  MOVLW  38
0242:  BTFSS  F9E.4
0244:  BRA    0242
0246:  MOVWF  FAD
....................       code=10*code+8; 
0248:  MOVLW  0A
024A:  MOVWF  21
024C:  MOVFF  18,22
0250:  RCALL  00DE
0252:  MOVLW  08
0254:  ADDWF  01,W
0256:  MOVWF  18
....................    } 
....................    if(digi_row_4){ 
0258:  BSF    F95.6
025A:  BTFSS  F83.6
025C:  BRA    0274
....................       printf("0"); 
025E:  MOVLW  30
0260:  BTFSS  F9E.4
0262:  BRA    0260
0264:  MOVWF  FAD
....................       code=10*code+0; 
0266:  MOVLW  0A
0268:  MOVWF  21
026A:  MOVFF  18,22
026E:  RCALL  00DE
0270:  MOVFF  01,18
....................    } 
....................     
....................    //Lecture de la colone 3 
....................    output_low(digi_column_1); 
0274:  BCF    F95.0
0276:  BCF    F8C.0
....................    output_low(digi_column_2); 
0278:  BCF    F95.1
027A:  BCF    F8C.1
....................    output_high(digi_column_3); 
027C:  BCF    F95.2
027E:  BSF    F8C.2
....................     
....................    if(digi_row_1){ 
0280:  BSF    F95.3
0282:  BTFSS  F83.3
0284:  BRA    029E
....................       printf("3"); 
0286:  MOVLW  33
0288:  BTFSS  F9E.4
028A:  BRA    0288
028C:  MOVWF  FAD
....................       code=10*code+3; 
028E:  MOVLW  0A
0290:  MOVWF  21
0292:  MOVFF  18,22
0296:  RCALL  00DE
0298:  MOVLW  03
029A:  ADDWF  01,W
029C:  MOVWF  18
....................    } 
....................    if(digi_row_2){ 
029E:  BSF    F95.4
02A0:  BTFSS  F83.4
02A2:  BRA    02BC
....................       printf("6"); 
02A4:  MOVLW  36
02A6:  BTFSS  F9E.4
02A8:  BRA    02A6
02AA:  MOVWF  FAD
....................       code=10*code+6; 
02AC:  MOVLW  0A
02AE:  MOVWF  21
02B0:  MOVFF  18,22
02B4:  RCALL  00DE
02B6:  MOVLW  06
02B8:  ADDWF  01,W
02BA:  MOVWF  18
....................    } 
....................    if(digi_row_3){ 
02BC:  BSF    F95.5
02BE:  BTFSS  F83.5
02C0:  BRA    02DA
....................       printf("9"); 
02C2:  MOVLW  39
02C4:  BTFSS  F9E.4
02C6:  BRA    02C4
02C8:  MOVWF  FAD
....................       code=10*code+9; 
02CA:  MOVLW  0A
02CC:  MOVWF  21
02CE:  MOVFF  18,22
02D2:  RCALL  00DE
02D4:  MOVLW  09
02D6:  ADDWF  01,W
02D8:  MOVWF  18
....................    } 
....................    if(digi_row_4){ 
02DA:  BSF    F95.6
02DC:  BTFSS  F83.6
02DE:  BRA    0372
....................       printf("#"); 
02E0:  MOVLW  23
02E2:  BTFSS  F9E.4
02E4:  BRA    02E2
02E6:  MOVWF  FAD
....................       if(code==ARMAMENT_CODE){ 
02E8:  MOVF   18,W
02EA:  SUBLW  21
02EC:  BNZ   031C
....................          general_reset(); 
02EE:  BRA    0128
....................          //Setup 
....................          alarm_state=0; 
02F0:  CLRF   1C
....................          alarm_ext_state=0; 
02F2:  CLRF   1D
....................          printf("%c%c Alarme ON",254,1); 
02F4:  MOVLW  FE
02F6:  BTFSS  F9E.4
02F8:  BRA    02F6
02FA:  MOVWF  FAD
02FC:  MOVLW  01
02FE:  BTFSS  F9E.4
0300:  BRA    02FE
0302:  MOVWF  FAD
0304:  MOVLW  88
0306:  MOVWF  FF6
0308:  MOVLW  03
030A:  MOVWF  FF7
030C:  MOVLW  0A
030E:  MOVWF  21
0310:  RCALL  014C
....................          alarm_delay=5;//DELAY_OUT; 
0312:  MOVLW  05
0314:  MOVWF  19
....................          output_high(buzzer); 
0316:  BCF    F92.0
0318:  BSF    F89.0
....................       }else if(code==DISARMAMENT_CODE){ 
031A:  BRA    0370
031C:  MOVF   18,W
031E:  SUBLW  80
0320:  BNZ   0352
....................          printf("%c%c Alarme OFF",254,1); 
0322:  MOVLW  FE
0324:  BTFSS  F9E.4
0326:  BRA    0324
0328:  MOVWF  FAD
032A:  MOVLW  01
032C:  BTFSS  F9E.4
032E:  BRA    032C
0330:  MOVWF  FAD
0332:  MOVLW  98
0334:  MOVWF  FF6
0336:  MOVLW  03
0338:  MOVWF  FF7
033A:  MOVLW  0B
033C:  MOVWF  21
033E:  RCALL  014C
....................          alarm_state=-1; 
0340:  MOVLW  FF
0342:  MOVWF  1C
....................          output_low(buzzer); 
0344:  BCF    F92.0
0346:  BCF    F89.0
....................          output_low(alarm); 
0348:  BCF    F93.7
034A:  BCF    F8A.7
....................          output_low(alarm_led); 
034C:  BCF    F94.0
034E:  BCF    F8B.0
....................       }else{ 
0350:  BRA    0370
....................          printf("%c%c Code faux",254,1); 
0352:  MOVLW  FE
0354:  BTFSS  F9E.4
0356:  BRA    0354
0358:  MOVWF  FAD
035A:  MOVLW  01
035C:  BTFSS  F9E.4
035E:  BRA    035C
0360:  MOVWF  FAD
0362:  MOVLW  A8
0364:  MOVWF  FF6
0366:  MOVLW  03
0368:  MOVWF  FF7
036A:  MOVLW  0A
036C:  MOVWF  21
036E:  RCALL  014C
....................       } 
....................       code=0;//Reset du code 
0370:  CLRF   18
....................    } 
....................    //Reset du digicode 
....................    output_high(digi_column_1); 
0372:  BCF    F95.0
0374:  BSF    F8C.0
....................    output_high(digi_column_2); 
0376:  BCF    F95.1
0378:  BSF    F8C.1
....................    output_high(digi_column_3); 
037A:  BCF    F95.2
037C:  BSF    F8C.2
.................... } 
....................  
037E:  BCF    FF2.1
0380:  GOTO   0060
.................... void main(){ 
*
044E:  CLRF   FF8
0450:  BCF    FD0.7
0452:  BSF    07.7
0454:  CLRF   FEA
0456:  CLRF   FE9
0458:  MOVLW  81
045A:  MOVWF  FAF
045C:  MOVLW  A6
045E:  MOVWF  FAC
0460:  MOVLW  90
0462:  MOVWF  FAB
0464:  CLRF   17
0466:  CLRF   18
0468:  MOVLW  FF
046A:  MOVWF  19
046C:  MOVWF  1A
046E:  MOVWF  1B
0470:  CLRF   1C
0472:  CLRF   1D
0474:  BSF    FC1.0
0476:  BSF    FC1.1
0478:  BSF    FC1.2
047A:  BCF    FC1.3
....................    setup_adc_ports(NO_ANALOGS); 
047C:  BSF    FC1.0
047E:  BSF    FC1.1
0480:  BSF    FC1.2
0482:  BCF    FC1.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
0484:  BCF    FC1.6
0486:  BCF    FC2.6
0488:  BCF    FC2.7
048A:  BCF    FC1.7
048C:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
048E:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
0490:  BCF    FC6.5
0492:  BCF    F94.5
0494:  BSF    F94.4
0496:  BCF    F94.3
0498:  MOVLW  01
049A:  MOVWF  FC6
049C:  MOVLW  00
049E:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
04A0:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
04A2:  MOVLW  80
04A4:  MOVWF  FD5
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
04A6:  MOVLW  B5
04A8:  MOVWF  FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
04AA:  MOVLW  00
04AC:  MOVWF  FCA
04AE:  MOVLW  00
04B0:  MOVWF  FCB
....................    enable_interrupts(INT_TIMER1); 
04B2:  BSF    F9D.0
....................    enable_interrupts(INT_EXT); 
04B4:  BSF    FF2.4
....................    enable_interrupts(GLOBAL); 
04B6:  MOVLW  C0
04B8:  IORWF  FF2,F
....................    //Setup_Oscillator parameter not selected from Intr Oscillator Config tab 
....................     
....................    //Setup du digicode 
....................    output_high(digi_column_1); 
04BA:  BCF    F95.0
04BC:  BSF    F8C.0
....................    output_high(digi_column_2); 
04BE:  BCF    F95.1
04C0:  BSF    F8C.1
....................    output_high(digi_column_3); 
04C2:  BCF    F95.2
04C4:  BSF    F8C.2
....................     
....................    while(true){ 
....................       if(alarm_delay==0 && alarm_state==0){ 
04C6:  MOVF   19,F
04C8:  BNZ   04DA
04CA:  MOVF   1C,F
04CC:  BNZ   04DA
....................          alarm_state=1; 
04CE:  MOVLW  01
04D0:  MOVWF  1C
....................          output_low(buzzer); 
04D2:  BCF    F92.0
04D4:  BCF    F89.0
....................          output_high(alarm_led); 
04D6:  BCF    F94.0
04D8:  BSF    F8B.0
....................       } 
....................        
....................       if(alarm_ext_state==1 && alarm_ext_delay==0){ 
04DA:  DECFSZ 1D,W
04DC:  BRA    04EA
04DE:  MOVF   1A,F
04E0:  BNZ   04EA
....................             alarm_ext_state=-1; 
04E2:  MOVLW  FF
04E4:  MOVWF  1D
....................             output_low(alarm); 
04E6:  BCF    F93.7
04E8:  BCF    F8A.7
....................       } 
....................       if(door_delay==0 && alarm_state==1){ 
04EA:  MOVF   1B,F
04EC:  BNZ   0562
04EE:  DECFSZ 1C,W
04F0:  BRA    0562
....................             if(alarm_ext_state==0) 
04F2:  MOVF   1D,F
04F4:  BNZ   04F8
....................                alarm_ext_setup(); 
04F6:  RCALL  0440
....................             if(!door_1){ 
04F8:  BSF    F93.5
04FA:  BTFSC  F81.5
04FC:  BRA    052E
....................                printf("%c%c Alerte, porte 1",254,1); 
04FE:  MOVLW  FE
0500:  BTFSS  F9E.4
0502:  BRA    0500
0504:  MOVWF  FAD
0506:  MOVLW  01
0508:  BTFSS  F9E.4
050A:  BRA    0508
050C:  MOVWF  FAD
050E:  MOVLW  B8
0510:  MOVWF  FF6
0512:  MOVLW  03
0514:  MOVWF  FF7
0516:  CLRF   16
0518:  BTFSC  FF2.7
051A:  BSF    16.7
051C:  BCF    FF2.7
051E:  MOVLW  10
0520:  MOVWF  21
0522:  RCALL  014C
0524:  BTFSC  16.7
0526:  BSF    FF2.7
....................                output_high(door_1_led); 
0528:  BCF    F96.0
052A:  BSF    F8D.0
....................             } else if(!door_2){ 
052C:  BRA    0562
052E:  BSF    F93.6
0530:  BTFSC  F81.6
0532:  BRA    0562
....................                printf("%c%c Alerte, porte 2",254,1); 
0534:  MOVLW  FE
0536:  BTFSS  F9E.4
0538:  BRA    0536
053A:  MOVWF  FAD
053C:  MOVLW  01
053E:  BTFSS  F9E.4
0540:  BRA    053E
0542:  MOVWF  FAD
0544:  MOVLW  CE
0546:  MOVWF  FF6
0548:  MOVLW  03
054A:  MOVWF  FF7
054C:  CLRF   16
054E:  BTFSC  FF2.7
0550:  BSF    16.7
0552:  BCF    FF2.7
0554:  MOVLW  10
0556:  MOVWF  21
0558:  RCALL  014C
055A:  BTFSC  16.7
055C:  BSF    FF2.7
....................                output_high(door_2_led); 
055E:  BCF    F96.1
0560:  BSF    F8D.1
....................             } 
....................       } 
....................        
....................       if(alarm_state == 1){ 
0562:  DECFSZ 1C,W
0564:  BRA    0670
....................          if(!window_1){ 
0566:  BSF    F93.1
0568:  BTFSC  F81.1
056A:  BRA    05A2
....................             printf("%c%c Alerte, fenêtre 1",254,1); 
056C:  MOVLW  FE
056E:  BTFSS  F9E.4
0570:  BRA    056E
0572:  MOVWF  FAD
0574:  MOVLW  01
0576:  BTFSS  F9E.4
0578:  BRA    0576
057A:  MOVWF  FAD
057C:  MOVLW  E4
057E:  MOVWF  FF6
0580:  MOVLW  03
0582:  MOVWF  FF7
0584:  CLRF   16
0586:  BTFSC  FF2.7
0588:  BSF    16.7
058A:  BCF    FF2.7
058C:  MOVLW  12
058E:  MOVWF  21
0590:  RCALL  014C
0592:  BTFSC  16.7
0594:  BSF    FF2.7
....................             output_high(window_1_led); 
0596:  BCF    F94.1
0598:  BSF    F8B.1
....................             if(alarm_ext_state==0) 
059A:  MOVF   1D,F
059C:  BNZ   05A0
....................                alarm_ext_setup(); 
059E:  RCALL  0440
....................          }else if(!window_2){ 
05A0:  BRA    0670
05A2:  BSF    F93.2
05A4:  BTFSC  F81.2
05A6:  BRA    05DE
....................             printf("%c%c Alerte, fenêtre 2",254,1); 
05A8:  MOVLW  FE
05AA:  BTFSS  F9E.4
05AC:  BRA    05AA
05AE:  MOVWF  FAD
05B0:  MOVLW  01
05B2:  BTFSS  F9E.4
05B4:  BRA    05B2
05B6:  MOVWF  FAD
05B8:  MOVLW  FC
05BA:  MOVWF  FF6
05BC:  MOVLW  03
05BE:  MOVWF  FF7
05C0:  CLRF   16
05C2:  BTFSC  FF2.7
05C4:  BSF    16.7
05C6:  BCF    FF2.7
05C8:  MOVLW  12
05CA:  MOVWF  21
05CC:  RCALL  014C
05CE:  BTFSC  16.7
05D0:  BSF    FF2.7
....................             output_high(window_2_led); 
05D2:  BCF    F94.2
05D4:  BSF    F8B.2
....................             if(alarm_ext_state==0) 
05D6:  MOVF   1D,F
05D8:  BNZ   05DC
....................                alarm_ext_setup(); 
05DA:  RCALL  0440
....................          }else if(!window_3){ 
05DC:  BRA    0670
05DE:  BSF    F93.3
05E0:  BTFSC  F81.3
05E2:  BRA    061A
....................             printf("%c%c Alerte, fenêtre 3",254,1); 
05E4:  MOVLW  FE
05E6:  BTFSS  F9E.4
05E8:  BRA    05E6
05EA:  MOVWF  FAD
05EC:  MOVLW  01
05EE:  BTFSS  F9E.4
05F0:  BRA    05EE
05F2:  MOVWF  FAD
05F4:  MOVLW  14
05F6:  MOVWF  FF6
05F8:  MOVLW  04
05FA:  MOVWF  FF7
05FC:  CLRF   16
05FE:  BTFSC  FF2.7
0600:  BSF    16.7
0602:  BCF    FF2.7
0604:  MOVLW  12
0606:  MOVWF  21
0608:  RCALL  014C
060A:  BTFSC  16.7
060C:  BSF    FF2.7
....................             output_high(window_3_led); 
060E:  BCF    F94.5
0610:  BSF    F8B.5
....................             if(alarm_ext_state==0) 
0612:  MOVF   1D,F
0614:  BNZ   0618
....................                alarm_ext_setup(); 
0616:  RCALL  0440
....................          }else if(!window_4){ 
0618:  BRA    0670
061A:  BSF    F93.4
061C:  BTFSC  F81.4
061E:  BRA    0656
....................             printf("%c%c Alerte, fenêtre 4",254,1); 
0620:  MOVLW  FE
0622:  BTFSS  F9E.4
0624:  BRA    0622
0626:  MOVWF  FAD
0628:  MOVLW  01
062A:  BTFSS  F9E.4
062C:  BRA    062A
062E:  MOVWF  FAD
0630:  MOVLW  2C
0632:  MOVWF  FF6
0634:  MOVLW  04
0636:  MOVWF  FF7
0638:  CLRF   16
063A:  BTFSC  FF2.7
063C:  BSF    16.7
063E:  BCF    FF2.7
0640:  MOVLW  12
0642:  MOVWF  21
0644:  RCALL  014C
0646:  BTFSC  16.7
0648:  BSF    FF2.7
....................             output_high(window_4_led); 
064A:  BCF    F94.4
064C:  BSF    F8B.4
....................             if(alarm_ext_state==0) 
064E:  MOVF   1D,F
0650:  BNZ   0654
....................                alarm_ext_setup(); 
0652:  RCALL  0440
....................          }else if((!door_1|| !door_2)&&door_delay==-1){ 
0654:  BRA    0670
0656:  BSF    F93.5
0658:  BTFSS  F81.5
065A:  BRA    0662
065C:  BSF    F93.6
065E:  BTFSC  F81.6
0660:  BRA    0670
0662:  MOVF   1B,W
0664:  SUBLW  FF
0666:  BNZ   0670
....................             output_high(buzzer); 
0668:  BCF    F92.0
066A:  BSF    F89.0
....................             door_delay=5;//DELAY_IN 
066C:  MOVLW  05
066E:  MOVWF  1B
....................          } 
....................       } 
....................    } 
0670:  BRA    04C6
.................... } 
0672:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOBROWNOUT WDT128 NOWDT BORV20 NOPUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
